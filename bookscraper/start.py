import os
import sys
import requests
import names
import random
import datetime

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from bookscraper.word_generator import WordGenerator


word_generator = WordGenerator()


def init_working_dir():
    os.chdir(os.path.dirname(sys.argv[0]))


def post_book():
    base_url = 'http://gs-api:3000'
    file = open('book_template.txt', 'r')
    content = generate_book(file.read())
    response = requests.post('{}/book'.format(base_url), data={'content': content})
    print(response.text.encode('utf-8'))


def generate_book(template):
    title = generate_title()
    author = names.get_full_name()
    body = generate_body()
    post_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
    return template\
        .replace('placeholder_title', title)\
        .replace('placeholder_author', author)\
        .replace('placeholder_body', body)\
        .replace('placeholder_post', post_date)


def generate_title():
    words = word_generator.generate(num=random.randint(2, 8))
    formatted_words = [w.capitalize() for w in words]
    return ' '.join(formatted_words) + ' (Autogenerated)'


def generate_body():
    body = ''
    words = word_generator.generate(num=random.randint(200, 1000))
    num_paragraphs = random.randint(20, 200)
    # num_paragraphs = random.randint(3, 5)
    for i in range(num_paragraphs):
        body += generate_paragraph(words) + '\r\n\r\n'
    return body


def generate_paragraph(words):
    paragraph = ''
    num_sentences = random.randint(3, 8)
    for i in range(num_sentences):
        paragraph += random.choice(words).capitalize()
        num_words = random.randint(0, 50)
        for j in range(num_words):
            paragraph += ' ' + random.choice(words)
        paragraph += '. '
    return paragraph


if __name__ == '__main__':
    post_book()
